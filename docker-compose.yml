version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: demo01-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: demo01
      MYSQL_USER: demo01
      MYSQL_PASSWORD: demo01
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - demo01-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: demo01-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - demo01-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 3s
      retries: 5

  # 应用服务
  app:
    build: .
    container_name: demo01-app
    ports:
      - "8080:8080"
    environment:
      - MYSQL_DSN=mysql://demo01:demo01@mysql:3306/demo01?charset=utf8mb4&parseTime=True&loc=Local
      - REDIS_ADDR=redis:6379
      - REDIS_PWD=
      - PORT=8080
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - demo01-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
  redis_data:


networks:
  demo01-network:
    driver: bridge
